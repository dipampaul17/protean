[tool.poetry]
name = "protean"
version = "1.0.0"
description = "Autonomous Infrastructure Pattern Discovery Engine using Graph Neural Networks"
authors = ["Dipam Paul <dipampaul@example.com>"]
readme = "README.md"
homepage = "https://github.com/dipampaul17/protean"
repository = "https://github.com/dipampaul17/protean"
keywords = ["infrastructure", "pattern-discovery", "graph-neural-networks", "failure-analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.8"
# Core ML and Graph Neural Networks
torch = "^2.0.0"
torch-geometric = "^2.3.0"
torchvision = "^0.15.0"
# Scientific Computing
numpy = "^1.21.0"
scipy = ">=1.10,<1.15"
scikit-learn = "^1.3.0"
# Data Processing and Graphs
networkx = "^3.1"
pandas = "^2.0.0"
# Visualization
plotly = "^5.17.0"
# Configuration and Environment  
pyyaml = "^6.0.0"
python-dotenv = "^1.0.0"
click = "^8.1.0"
# Logging and Monitoring
loguru = "^0.7.0"
wandb = "^0.16.0"
# Utilities
tqdm = "^4.66.0"
tenacity = "^8.2.0"
pathlib2 = "^2.3.0"
# Optional ML enhancements
umap-learn = { version = "^0.5.4", optional = true }
openai = { version = "^1.3.0", optional = true }

[tool.poetry.extras]
visualization = ["umap-learn"]
gpt = ["openai"]
all = ["umap-learn", "openai"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
isort = "^5.12.0"
mypy = "^1.5.0"
flake8 = "^6.0.0"

[tool.poetry.scripts]
protean = "protean.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=protean --cov-report=html --cov-report=term-missing" 